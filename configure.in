AC_INIT(configure.in)
AM_INIT_AUTOMAKE(textool, 1.4.6)
AC_CONFIG_MACRO_DIR([m4])
AC_PROG_CXX(CC g++)
AC_ENABLE_STATIC(no)
AC_PROG_LIBTOOL
CXXFLAGS="-Wall -Werror -Wno-non-virtual-dtor"

dnl *********************************************
dnl external programs
dnl *********************************************
AC_PATH_PROG(LATEX, latex, latex)
AC_PATH_PROG(PDFLATEX, pdflatex, pdflatex)
AC_PATH_PROG(BIBTEX, bibtex, bibtex)
AC_PATH_PROG(DVIPS, dvips, dvips)
AC_PATH_PROG(DVIPDF, dvipdf, dvipdf)
AC_PATH_PROG(PS2PDF, ps2pdf, ps2pdf)
AC_PATH_PROG(XDVI, xdvi, xdvi)
AC_PATH_PROG(GV, gv, gv)
AC_PATH_PROG(GS, gs, gs)
AC_PATH_PROG(XPDF, xpdf, xpdf)
AC_PATH_PROG(QEDIT, qedit, qedit)
AC_PATH_PROG(XTERM, xterm, xterm)
AC_PATH_PROG(LPR, lpr, lpr)

dnl *********************************************
dnl Qt
dnl *********************************************

dnl ****************
dnl set Qt directory
AC_ARG_WITH( qt-dir,
  [ --with-qt-dir=path    Path to Qt directory /usr/lib/qt4 ],
  qt_dir=$withval, qt_dir= )

if test "$qt_dir" = ""; then
  qt_dir=/usr/lib/qt4
fi

dnl ************************
dnl set Qt library directory
AC_ARG_WITH(qt-libraries,
  [ --with-qt-libraries=path    Path to Qt libraries directory /usr/lib/qt4/lib ],
  qt_libraries=$withval, qt_libraries=)

if test "$qt_libraries" = ""; then
  qt_libraries=$qt_dir/lib
fi

dnl ************************
dnl set Qt include directory
AC_ARG_WITH(qt-includes,
  [ --with-qt-includes=path    Path to Qt includes directory /usr/lib/qt4/include ],
  qt_includes=$withval, qt_includes=)

if test "$qt_includes" = ""; then
  qt_includes=$qt_dir/include
fi

dnl *********************
dnl set Qt bin directory
AC_ARG_WITH(qt-bin,
  [ --with-qt-bin=path    Path to Qt bin directory /usr/lib/qt3/bin ],
  qt_bin=$withval, qt_bin=)

if test "$qt_bin" = ""; then
  qt_bin=$qt_dir/bin
fi

dnl ***********************
dnl Qt configuration checks

AC_CHECK_FILE($qt_includes/QtCore/QtCore, , AC_ERROR(Can not find QtCore include file))
AC_CHECK_FILE($qt_libraries/libQtCore.so, qt_lib=QtCore,  qt_lib=QtCore )

AC_PATH_PROG(qt_moc, moc,  $qt_bin/moc)
AC_PATH_PROG(qt_rcc, rcc,  $qt_bin/rcc)

AC_SUBST(qt_lib)
AC_SUBST(qt_dir)
AC_SUBST(qt_libraries)
AC_SUBST(qt_includes)
AC_SUBST(qt_bin)

echo ""
echo "Qt configuration:"
echo "qt_lib       = " $qt_lib
echo "qt_dir       = " $qt_dir
echo "qt_libraries = " $qt_libraries
echo "qt_includes  = " $qt_includes
echo "qt_bin       = " $qt_bin

dnl **************************
dnl Shared vs static

AC_ARG_ENABLE(shared-libs, [AS_HELP_STRING([--enable-shared], [enable shared libraries for program dependencies])],, [enable_shared_libs=no])
if test no != $enable_shared_libs; then
  echo ""
	echo "using shared libraries for program dependencies"
else
  echo ""
	echo "using static libraries for program dependencies"
fi

AM_CONDITIONAL(ENABLE_SHARED, [test no != $enable_shared_libs])

dnl **************************
dnl retrieve current timestamp
timestamp=`date +"%G/%m/%d"`
AC_SUBST(timestamp)
echo ""
echo "timestamp = " $timestamp

echo ""
AC_OUTPUT( \
  textool.spec \
  Makefile \
  base/Makefile \
  base-pixmaps/Makefile \
  base-qt/Makefile \
  base-help/Makefile \
  base-server/Makefile \
  extra-includes/Makefile \
  src/Makefile \
  src/Config.h \
  src/SystemOptions.h )
